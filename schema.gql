# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateUser {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

input LoginInput {
  username: String!
  password: String!
}

interface MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Mutation {
  register(data: CreateUser!): User!
  login(data: LoginInput!): Token!
  createPost(data: PostInput!): Post!
  updatePost(data: PostInput!, id: Float!): Post!
}

type Post implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  title: String!
  body: String!
  user: User!
}

input PostInput {
  title: String!
  body: String!
}

type Query {
  users: [User!]!
  posts: [Post!]!
  post(id: Float!): Post!
}

type Token implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  firstName: String!
  lastName: String!
  username: String!
  posts: [Post!]
  accessToken: String!
}

type User implements MetaData {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  firstName: String!
  lastName: String!
  username: String!
  posts: [Post!]
}
